/*
* generated by Xtext
*/
grammar InternalULSWIG;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package dk.sdu.mmmi.embedix.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package dk.sdu.mmmi.embedix.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import dk.sdu.mmmi.embedix.services.ULSWIGGrammarAccess;

}

@parser::members {

 	private ULSWIGGrammarAccess grammarAccess;
 	
    public InternalULSWIGParser(TokenStream input, ULSWIGGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Robot";	
   	}
   	
   	@Override
   	protected ULSWIGGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleRobot
entryRuleRobot returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRobotRule()); }
	 iv_ruleRobot=ruleRobot 
	 { $current=$iv_ruleRobot.current; } 
	 EOF 
;

// Rule Robot
ruleRobot returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getRobotAccess().getConstructorsConstructorParserRuleCall_0()); 
	    }
		lv_constructors_0_0=ruleConstructor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRobotRule());
	        }
       		add(
       			$current, 
       			"constructors",
        		lv_constructors_0_0, 
        		"Constructor");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleConstructor
entryRuleConstructor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstructorRule()); }
	 iv_ruleConstructor=ruleConstructor 
	 { $current=$iv_ruleConstructor.current; } 
	 EOF 
;

// Rule Constructor
ruleConstructor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_isPublic_0_0=	'public' 
    {
        newLeafNode(lv_isPublic_0_0, grammarAccess.getConstructorAccess().getIsPublicPublicKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstructorRule());
	        }
       		setWithLastConsumed($current, "isPublic", true, "public");
	    }

)
)?(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getConstructorAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstructorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConstructorAccess().getLeftParenthesisKeyword_2());
    }
((
(
		lv_parameters_3_0=RULE_ID
		{
			newLeafNode(lv_parameters_3_0, grammarAccess.getConstructorAccess().getParametersIDTerminalRuleCall_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstructorRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"ID");
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConstructorAccess().getCommaKeyword_3_1_0());
    }
(
(
		lv_parameters_5_0=RULE_ID
		{
			newLeafNode(lv_parameters_5_0, grammarAccess.getConstructorAccess().getParametersIDTerminalRuleCall_3_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstructorRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"ID");
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getConstructorAccess().getRightParenthesisKeyword_4());
    }
(	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConstructorAccess().getColonKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstructorAccess().getAddressesAddressParserRuleCall_5_1_0()); 
	    }
		lv_addresses_8_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructorRule());
	        }
       		add(
       			$current, 
       			"addresses",
        		lv_addresses_8_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getConstructorAccess().getCommaKeyword_5_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstructorAccess().getAddressesAddressParserRuleCall_5_2_1_0()); 
	    }
		lv_addresses_10_0=ruleAddress		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructorRule());
	        }
       		add(
       			$current, 
       			"addresses",
        		lv_addresses_10_0, 
        		"Address");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getConstructorAccess().getLeftCurlyBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstructorAccess().getMembersMemberParserRuleCall_7_0()); 
	    }
		lv_members_12_0=ruleMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructorRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_12_0, 
        		"Member");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getConstructorAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleAddress
entryRuleAddress returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddressRule()); }
	 iv_ruleAddress=ruleAddress 
	 { $current=$iv_ruleAddress.current; } 
	 EOF 
;

// Rule Address
ruleAddress returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAddressAccess().getCommercialAtKeyword_0_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAddressAccess().getNameIDTerminalRuleCall_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddressRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
    |(	otherlv_2='@' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAddressAccess().getCommercialAtKeyword_1_0());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAddressAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		lv_elements_4_0=RULE_ID
		{
			newLeafNode(lv_elements_4_0, grammarAccess.getAddressAccess().getElementsIDTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddressRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"ID");
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAddressAccess().getCommaKeyword_1_3_0());
    }
(
(
		lv_elements_6_0=RULE_ID
		{
			newLeafNode(lv_elements_6_0, grammarAccess.getAddressAccess().getElementsIDTerminalRuleCall_1_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddressRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"elements",
        		lv_elements_6_0, 
        		"ID");
	    }

)
))*	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAddressAccess().getRightParenthesisKeyword_1_4());
    }
))
;





// Entry rule entryRuleMember
entryRuleMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMemberRule()); }
	 iv_ruleMember=ruleMember 
	 { $current=$iv_ruleMember.current; } 
	 EOF 
;

// Rule Member
ruleMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMemberAccess().getLinkBindingParserRuleCall_0()); 
    }
    this_LinkBinding_0=ruleLinkBinding
    { 
        $current = $this_LinkBinding_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMemberAccess().getExpansionParserRuleCall_1()); 
    }
    this_Expansion_1=ruleExpansion
    { 
        $current = $this_Expansion_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMemberAccess().getInstantiationParserRuleCall_2()); 
    }
    this_Instantiation_2=ruleInstantiation
    { 
        $current = $this_Instantiation_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLinkBinding
entryRuleLinkBinding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkBindingRule()); }
	 iv_ruleLinkBinding=ruleLinkBinding 
	 { $current=$iv_ruleLinkBinding.current; } 
	 EOF 
;

// Rule LinkBinding
ruleLinkBinding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TOSNET' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLinkBindingAccess().getTOSNETKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLinkBindingAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getLinkBindingAccess().getPropertiesLinkPropertyParserRuleCall_2_0_0()); 
	    }
		lv_properties_2_0=ruleLinkProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinkBindingRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_2_0, 
        		"LinkProperty");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLinkBindingAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinkBindingAccess().getPropertiesLinkPropertyParserRuleCall_2_1_1_0()); 
	    }
		lv_properties_4_0=ruleLinkProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinkBindingRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_4_0, 
        		"LinkProperty");
	        afterParserOrEnumRuleCall();
	    }

)
)))	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLinkBindingAccess().getRightParenthesisKeyword_3());
    }
	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLinkBindingAccess().getSemicolonKeyword_4());
    }
)
;





// Entry rule entryRuleLinkProperty
entryRuleLinkProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkPropertyRule()); }
	 iv_ruleLinkProperty=ruleLinkProperty 
	 { $current=$iv_ruleLinkProperty.current; } 
	 EOF 
;

// Rule LinkProperty
ruleLinkProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='LINK' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLinkPropertyAccess().getLINKKeyword_0_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLinkPropertyAccess().getEqualsSignKeyword_0_1());
    }
(
(
		lv_linkName_2_0=RULE_ID
		{
			newLeafNode(lv_linkName_2_0, grammarAccess.getLinkPropertyAccess().getLinkNameIDTerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"linkName",
        		lv_linkName_2_0, 
        		"ID");
	    }

)
))
    |(	otherlv_3='BASE' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLinkPropertyAccess().getBASEKeyword_1_0());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLinkPropertyAccess().getEqualsSignKeyword_1_1());
    }
(
(
		lv_baseValue_5_0=RULE_INT
		{
			newLeafNode(lv_baseValue_5_0, grammarAccess.getLinkPropertyAccess().getBaseValueINTTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"baseValue",
        		lv_baseValue_5_0, 
        		"INT");
	    }

)
)))
;





// Entry rule entryRuleExpansion
entryRuleExpansion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpansionRule()); }
	 iv_ruleExpansion=ruleExpansion 
	 { $current=$iv_ruleExpansion.current; } 
	 EOF 
;

// Rule Expansion
ruleExpansion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getExpansionAccess().getIdentifierExpansionNameParserRuleCall_0_0()); 
	    }
		lv_identifier_0_0=ruleExpansionName		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpansionRule());
	        }
       		set(
       			$current, 
       			"identifier",
        		lv_identifier_0_0, 
        		"ExpansionName");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getExpansionAccess().getColonKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getExpansionRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getExpansionAccess().getConstructorConstructorCrossReference_2_0()); 
	}

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getExpansionAccess().getLeftParenthesisKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getExpansionAccess().getArgumentsArgumentParserRuleCall_4_0_0()); 
	    }
		lv_arguments_4_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpansionRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_4_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getExpansionAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpansionAccess().getArgumentsArgumentParserRuleCall_4_1_1_0()); 
	    }
		lv_arguments_6_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpansionRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_6_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getExpansionAccess().getRightParenthesisKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getExpansionAccess().getBindingsAddressBindingParserRuleCall_6_0_0()); 
	    }
		lv_bindings_8_0=ruleAddressBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpansionRule());
	        }
       		add(
       			$current, 
       			"bindings",
        		lv_bindings_8_0, 
        		"AddressBinding");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getExpansionAccess().getCommaKeyword_6_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getExpansionAccess().getBindingsAddressBindingParserRuleCall_6_1_1_0()); 
	    }
		lv_bindings_10_0=ruleAddressBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpansionRule());
	        }
       		add(
       			$current, 
       			"bindings",
        		lv_bindings_10_0, 
        		"AddressBinding");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getExpansionAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleExpansionName
entryRuleExpansionName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpansionNameRule()); }
	 iv_ruleExpansionName=ruleExpansionName 
	 { $current=$iv_ruleExpansionName.current; } 
	 EOF 
;

// Rule ExpansionName
ruleExpansionName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpansionNameAccess().getSimpleExpansionNameParserRuleCall_0()); 
    }
    this_SimpleExpansionName_0=ruleSimpleExpansionName
    { 
        $current = $this_SimpleExpansionName_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpansionNameAccess().getAddressExpansionNameParserRuleCall_1()); 
    }
    this_AddressExpansionName_1=ruleAddressExpansionName
    { 
        $current = $this_AddressExpansionName_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAddressExpansionName
entryRuleAddressExpansionName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddressExpansionNameRule()); }
	 iv_ruleAddressExpansionName=ruleAddressExpansionName 
	 { $current=$iv_ruleAddressExpansionName.current; } 
	 EOF 
;

// Rule AddressExpansionName
ruleAddressExpansionName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAddressExpansionNameAccess().getCommercialAtKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAddressExpansionNameAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddressExpansionNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleSimpleExpansionName
entryRuleSimpleExpansionName returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleExpansionNameRule()); }
	 iv_ruleSimpleExpansionName=ruleSimpleExpansionName 
	 { $current=$iv_ruleSimpleExpansionName.current; } 
	 EOF 
;

// Rule SimpleExpansionName
ruleSimpleExpansionName returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getSimpleExpansionNameAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleExpansionNameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleAddressBinding
entryRuleAddressBinding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddressBindingRule()); }
	 iv_ruleAddressBinding=ruleAddressBinding 
	 { $current=$iv_ruleAddressBinding.current; } 
	 EOF 
;

// Rule AddressBinding
ruleAddressBinding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAddressBindingAccess().getCommercialAtKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAddressBindingAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddressBindingRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAddressBindingAccess().getEqualsSignKeyword_2());
    }
	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAddressBindingAccess().getLeftParenthesisKeyword_3());
    }
(
(
		lv_addresses_4_0=RULE_HEX_NUM
		{
			newLeafNode(lv_addresses_4_0, grammarAccess.getAddressBindingAccess().getAddressesHEX_NUMTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddressBindingRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"addresses",
        		lv_addresses_4_0, 
        		"HEX_NUM");
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAddressBindingAccess().getCommaKeyword_5_0());
    }
(
(
		lv_addresses_6_0=RULE_HEX_NUM
		{
			newLeafNode(lv_addresses_6_0, grammarAccess.getAddressBindingAccess().getAddressesHEX_NUMTerminalRuleCall_5_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddressBindingRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"addresses",
        		lv_addresses_6_0, 
        		"HEX_NUM");
	    }

)
))*	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAddressBindingAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleArgument
entryRuleArgument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgumentRule()); }
	 iv_ruleArgument=ruleArgument 
	 { $current=$iv_ruleArgument.current; } 
	 EOF 
;

// Rule Argument
ruleArgument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_simple_0_0=RULE_ID
		{
			newLeafNode(lv_simple_0_0, grammarAccess.getArgumentAccess().getSimpleIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArgumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"simple",
        		lv_simple_0_0, 
        		"ID");
	    }

)
)
    |((
(
		lv_lhs_1_0=RULE_ID
		{
			newLeafNode(lv_lhs_1_0, grammarAccess.getArgumentAccess().getLhsIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArgumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lhs",
        		lv_lhs_1_0, 
        		"ID");
	    }

)
)	otherlv_2='+' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getArgumentAccess().getPlusSignKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentAccess().getRhsArgumentParserRuleCall_1_2_0()); 
	    }
		lv_rhs_3_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_3_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		lv_text_4_0=RULE_STRING
		{
			newLeafNode(lv_text_4_0, grammarAccess.getArgumentAccess().getTextSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArgumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_4_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleInstantiation
entryRuleInstantiation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstantiationRule()); }
	 iv_ruleInstantiation=ruleInstantiation 
	 { $current=$iv_ruleInstantiation.current; } 
	 EOF 
;

// Rule Instantiation
ruleInstantiation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInstantiationAccess().getCommercialAtKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getInstantiationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstantiationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstantiationAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstantiationAccess().getKindKindParserRuleCall_3_0()); 
	    }
		lv_kind_3_0=ruleKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstantiationRule());
	        }
       		set(
       			$current, 
       			"kind",
        		lv_kind_3_0, 
        		"Kind");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstantiationAccess().getLeftParenthesisKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstantiationAccess().getPropertiesInstantiationPropertyParserRuleCall_5_0_0()); 
	    }
		lv_properties_5_0=ruleInstantiationProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstantiationRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_5_0, 
        		"InstantiationProperty");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInstantiationAccess().getCommaKeyword_5_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstantiationAccess().getPropertiesInstantiationPropertyParserRuleCall_5_1_1_0()); 
	    }
		lv_properties_7_0=ruleInstantiationProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstantiationRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_7_0, 
        		"InstantiationProperty");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInstantiationAccess().getRightParenthesisKeyword_6());
    }
	otherlv_9=';' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getInstantiationAccess().getSemicolonKeyword_7());
    }
)
;





// Entry rule entryRuleKind
entryRuleKind returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getKindRule()); } 
	 iv_ruleKind=ruleKind 
	 { $current=$iv_ruleKind.current.getText(); }  
	 EOF 
;

// Rule Kind
ruleKind returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='READ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getKindAccess().getREADKeyword_0()); 
    }

    |
	kw='WRITE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getKindAccess().getWRITEKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleInstantiationProperty
entryRuleInstantiationProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstantiationPropertyRule()); }
	 iv_ruleInstantiationProperty=ruleInstantiationProperty 
	 { $current=$iv_ruleInstantiationProperty.current; } 
	 EOF 
;

// Rule InstantiationProperty
ruleInstantiationProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInstantiationPropertyAccess().getIDPropertyAction_0_0(),
            $current);
    }
)	otherlv_1='ID' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInstantiationPropertyAccess().getIDKeyword_0_1());
    }
	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstantiationPropertyAccess().getEqualsSignKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstantiationPropertyAccess().getIdArgumentParserRuleCall_0_3_0()); 
	    }
		lv_id_3_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstantiationPropertyRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_3_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInstantiationPropertyAccess().getCRCPropertyAction_1_0(),
            $current);
    }
)	otherlv_5='CRC' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstantiationPropertyAccess().getCRCKeyword_1_1());
    }
))
;





RULE_HEX_NUM : '0' 'x' ('0'..'9'|'a'..'f'|'A'..'F')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


