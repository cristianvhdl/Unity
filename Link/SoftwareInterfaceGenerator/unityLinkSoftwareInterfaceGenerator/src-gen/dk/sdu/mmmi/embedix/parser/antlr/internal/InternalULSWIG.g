/*
* generated by Xtext
*/
grammar InternalULSWIG;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package dk.sdu.mmmi.embedix.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package dk.sdu.mmmi.embedix.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import dk.sdu.mmmi.embedix.services.ULSWIGGrammarAccess;

}

@parser::members {

 	private ULSWIGGrammarAccess grammarAccess;
 	
    public InternalULSWIGParser(TokenStream input, ULSWIGGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "LinkSpec";	
   	}
   	
   	@Override
   	protected ULSWIGGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleLinkSpec
entryRuleLinkSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkSpecRule()); }
	 iv_ruleLinkSpec=ruleLinkSpec 
	 { $current=$iv_ruleLinkSpec.current; } 
	 EOF 
;

// Rule LinkSpec
ruleLinkSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='link' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLinkSpecAccess().getLinkKeyword_0());
    }
((
(
		lv_packagename_1_0=RULE_ID
		{
			newLeafNode(lv_packagename_1_0, grammarAccess.getLinkSpecAccess().getPackagenameIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkSpecRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"packagename",
        		lv_packagename_1_0, 
        		"ID");
	    }

)
)	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLinkSpecAccess().getFullStopKeyword_1_1());
    }
)?(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getLinkSpecAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkSpecRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"ID");
	    }

)
)	otherlv_4=';' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLinkSpecAccess().getSemicolonKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getLinkSpecAccess().getConstructorsConstructorParserRuleCall_4_0()); 
	    }
		lv_constructors_5_0=ruleConstructor		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getLinkSpecRule());
	        }
       		add(
       			$current, 
       			"constructors",
        		lv_constructors_5_0, 
        		"Constructor");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleConstructor
entryRuleConstructor returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstructorRule()); }
	 iv_ruleConstructor=ruleConstructor 
	 { $current=$iv_ruleConstructor.current; } 
	 EOF 
;

// Rule Constructor
ruleConstructor returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_isPublic_0_0=	'public' 
    {
        newLeafNode(lv_isPublic_0_0, grammarAccess.getConstructorAccess().getIsPublicPublicKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstructorRule());
	        }
       		setWithLastConsumed($current, "isPublic", true, "public");
	    }

)
)?(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getConstructorAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstructorRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getConstructorAccess().getLeftParenthesisKeyword_2());
    }
((
(
		lv_parameters_3_0=RULE_ID
		{
			newLeafNode(lv_parameters_3_0, grammarAccess.getConstructorAccess().getParametersIDTerminalRuleCall_3_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstructorRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"parameters",
        		lv_parameters_3_0, 
        		"ID");
	    }

)
)(	otherlv_4=',' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getConstructorAccess().getCommaKeyword_3_1_0());
    }
(
(
		lv_parameters_5_0=RULE_ID
		{
			newLeafNode(lv_parameters_5_0, grammarAccess.getConstructorAccess().getParametersIDTerminalRuleCall_3_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstructorRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"parameters",
        		lv_parameters_5_0, 
        		"ID");
	    }

)
))*)?	otherlv_6=')' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getConstructorAccess().getRightParenthesisKeyword_4());
    }
(	otherlv_7=':' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getConstructorAccess().getColonKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getConstructorAccess().getAddressesConstructorAddressParametersParserRuleCall_5_1_0()); 
	    }
		lv_addresses_8_0=ruleConstructorAddressParameters		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructorRule());
	        }
       		set(
       			$current, 
       			"addresses",
        		lv_addresses_8_0, 
        		"ConstructorAddressParameters");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_9='{' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getConstructorAccess().getLeftCurlyBracketKeyword_6());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getConstructorAccess().getMembersMemberParserRuleCall_7_0_0()); 
	    }
		lv_members_10_0=ruleMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getConstructorRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_10_0, 
        		"Member");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=';' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getConstructorAccess().getSemicolonKeyword_7_1());
    }
)*	otherlv_12='}' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getConstructorAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleConstructorAddressParameters
entryRuleConstructorAddressParameters returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getConstructorAddressParametersRule()); }
	 iv_ruleConstructorAddressParameters=ruleConstructorAddressParameters 
	 { $current=$iv_ruleConstructorAddressParameters.current; } 
	 EOF 
;

// Rule ConstructorAddressParameters
ruleConstructorAddressParameters returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getConstructorAddressParametersAccess().getNamedAddressesParserRuleCall_0()); 
    }
    this_NamedAddresses_0=ruleNamedAddresses
    { 
        $current = $this_NamedAddresses_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getConstructorAddressParametersAccess().getAddressTupleParserRuleCall_1()); 
    }
    this_AddressTuple_1=ruleAddressTuple
    { 
        $current = $this_AddressTuple_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNamedAddresses
entryRuleNamedAddresses returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedAddressesRule()); }
	 iv_ruleNamedAddresses=ruleNamedAddresses 
	 { $current=$iv_ruleNamedAddresses.current; } 
	 EOF 
;

// Rule NamedAddresses
ruleNamedAddresses returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNamedAddressesAccess().getCommercialAtKeyword_0());
    }
(
(
		lv_addressNames_1_0=RULE_ID
		{
			newLeafNode(lv_addressNames_1_0, grammarAccess.getNamedAddressesAccess().getAddressNamesIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedAddressesRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"addressNames",
        		lv_addressNames_1_0, 
        		"ID");
	    }

)
)(	otherlv_2=',' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNamedAddressesAccess().getCommaKeyword_2_0());
    }
	otherlv_3='@' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getNamedAddressesAccess().getCommercialAtKeyword_2_1());
    }
(
(
		lv_addressNames_4_0=RULE_ID
		{
			newLeafNode(lv_addressNames_4_0, grammarAccess.getNamedAddressesAccess().getAddressNamesIDTerminalRuleCall_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedAddressesRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"addressNames",
        		lv_addressNames_4_0, 
        		"ID");
	    }

)
))*)
;





// Entry rule entryRuleAddressTuple
entryRuleAddressTuple returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddressTupleRule()); }
	 iv_ruleAddressTuple=ruleAddressTuple 
	 { $current=$iv_ruleAddressTuple.current; } 
	 EOF 
;

// Rule AddressTuple
ruleAddressTuple returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAddressTupleAccess().getCommercialAtKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getAddressTupleAccess().getLeftParenthesisKeyword_1());
    }
(
(
		lv_elements_2_0=RULE_ID
		{
			newLeafNode(lv_elements_2_0, grammarAccess.getAddressTupleAccess().getElementsIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddressTupleRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"ID");
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAddressTupleAccess().getCommaKeyword_3_0());
    }
(
(
		lv_elements_4_0=RULE_ID
		{
			newLeafNode(lv_elements_4_0, grammarAccess.getAddressTupleAccess().getElementsIDTerminalRuleCall_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddressTupleRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"ID");
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAddressTupleAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleMember
entryRuleMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMemberRule()); }
	 iv_ruleMember=ruleMember 
	 { $current=$iv_ruleMember.current; } 
	 EOF 
;

// Rule Member
ruleMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getMemberAccess().getLinkBindingParserRuleCall_0()); 
    }
    this_LinkBinding_0=ruleLinkBinding
    { 
        $current = $this_LinkBinding_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMemberAccess().getExpansionParserRuleCall_1()); 
    }
    this_Expansion_1=ruleExpansion
    { 
        $current = $this_Expansion_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMemberAccess().getInstantiationParserRuleCall_2()); 
    }
    this_Instantiation_2=ruleInstantiation
    { 
        $current = $this_Instantiation_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getMemberAccess().getGroupingParserRuleCall_3()); 
    }
    this_Grouping_3=ruleGrouping
    { 
        $current = $this_Grouping_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLinkBinding
entryRuleLinkBinding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkBindingRule()); }
	 iv_ruleLinkBinding=ruleLinkBinding 
	 { $current=$iv_ruleLinkBinding.current; } 
	 EOF 
;

// Rule LinkBinding
ruleLinkBinding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:

    { 
        newCompositeNode(grammarAccess.getLinkBindingAccess().getTosNetLinkBindingParserRuleCall()); 
    }
    this_TosNetLinkBinding_0=ruleTosNetLinkBinding
    { 
        $current = $this_TosNetLinkBinding_0.current; 
        afterParserOrEnumRuleCall();
    }

;





// Entry rule entryRuleTosNetLinkBinding
entryRuleTosNetLinkBinding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTosNetLinkBindingRule()); }
	 iv_ruleTosNetLinkBinding=ruleTosNetLinkBinding 
	 { $current=$iv_ruleTosNetLinkBinding.current; } 
	 EOF 
;

// Rule TosNetLinkBinding
ruleTosNetLinkBinding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='TOSNET' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTosNetLinkBindingAccess().getTOSNETKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTosNetLinkBindingAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTosNetLinkBindingAccess().getPropertiesLinkPropertyParserRuleCall_2_0()); 
	    }
		lv_properties_2_0=ruleLinkProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTosNetLinkBindingRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_2_0, 
        		"LinkProperty");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTosNetLinkBindingAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTosNetLinkBindingAccess().getPropertiesLinkPropertyParserRuleCall_3_1_0()); 
	    }
		lv_properties_4_0=ruleLinkProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTosNetLinkBindingRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_4_0, 
        		"LinkProperty");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_5=')' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTosNetLinkBindingAccess().getRightParenthesisKeyword_4());
    }
)
;





// Entry rule entryRuleLinkProperty
entryRuleLinkProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkPropertyRule()); }
	 iv_ruleLinkProperty=ruleLinkProperty 
	 { $current=$iv_ruleLinkProperty.current; } 
	 EOF 
;

// Rule LinkProperty
ruleLinkProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((	otherlv_0='CTRL' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLinkPropertyAccess().getCTRLKeyword_0_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLinkPropertyAccess().getEqualsSignKeyword_0_1());
    }
(
(
		lv_ctrlName_2_0=RULE_ID
		{
			newLeafNode(lv_ctrlName_2_0, grammarAccess.getLinkPropertyAccess().getCtrlNameIDTerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"ctrlName",
        		lv_ctrlName_2_0, 
        		"ID");
	    }

)
))
    |(	otherlv_3='BASE' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLinkPropertyAccess().getBASEKeyword_1_0());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getLinkPropertyAccess().getEqualsSignKeyword_1_1());
    }
(
(
		lv_baseValue_5_0=RULE_INT
		{
			newLeafNode(lv_baseValue_5_0, grammarAccess.getLinkPropertyAccess().getBaseValueINTTerminalRuleCall_1_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"baseValue",
        		lv_baseValue_5_0, 
        		"INT");
	    }

)
))
    |(	otherlv_6='COMM' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLinkPropertyAccess().getCOMMKeyword_2_0());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getLinkPropertyAccess().getEqualsSignKeyword_2_1());
    }
(
(
		lv_uartName_8_0=RULE_ID
		{
			newLeafNode(lv_uartName_8_0, grammarAccess.getLinkPropertyAccess().getUartNameIDTerminalRuleCall_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"uartName",
        		lv_uartName_8_0, 
        		"ID");
	    }

)
)))
;





// Entry rule entryRuleExpansion
entryRuleExpansion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpansionRule()); }
	 iv_ruleExpansion=ruleExpansion 
	 { $current=$iv_ruleExpansion.current; } 
	 EOF 
;

// Rule Expansion
ruleExpansion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExpansionAccess().getSimpleExpansionParserRuleCall_0()); 
    }
    this_SimpleExpansion_0=ruleSimpleExpansion
    { 
        $current = $this_SimpleExpansion_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getExpansionAccess().getAddressExpansionParserRuleCall_1()); 
    }
    this_AddressExpansion_1=ruleAddressExpansion
    { 
        $current = $this_AddressExpansion_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleSimpleExpansion
entryRuleSimpleExpansion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleExpansionRule()); }
	 iv_ruleSimpleExpansion=ruleSimpleExpansion 
	 { $current=$iv_ruleSimpleExpansion.current; } 
	 EOF 
;

// Rule SimpleExpansion
ruleSimpleExpansion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getSimpleExpansionAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleExpansionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getSimpleExpansionAccess().getColonKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleExpansionRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getSimpleExpansionAccess().getConstructorConstructorCrossReference_2_0()); 
	}

)
)	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSimpleExpansionAccess().getLeftParenthesisKeyword_3());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleExpansionAccess().getArgumentsArgumentParserRuleCall_4_0_0()); 
	    }
		lv_arguments_4_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleExpansionRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_4_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSimpleExpansionAccess().getCommaKeyword_4_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleExpansionAccess().getArgumentsArgumentParserRuleCall_4_1_1_0()); 
	    }
		lv_arguments_6_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleExpansionRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_6_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSimpleExpansionAccess().getRightParenthesisKeyword_5());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleExpansionAccess().getBindingsAddressBindingParserRuleCall_6_0_0()); 
	    }
		lv_bindings_8_0=ruleAddressBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleExpansionRule());
	        }
       		add(
       			$current, 
       			"bindings",
        		lv_bindings_8_0, 
        		"AddressBinding");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSimpleExpansionAccess().getCommaKeyword_6_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleExpansionAccess().getBindingsAddressBindingParserRuleCall_6_1_1_0()); 
	    }
		lv_bindings_10_0=ruleAddressBinding		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleExpansionRule());
	        }
       		add(
       			$current, 
       			"bindings",
        		lv_bindings_10_0, 
        		"AddressBinding");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?)
;





// Entry rule entryRuleAddressExpansion
entryRuleAddressExpansion returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddressExpansionRule()); }
	 iv_ruleAddressExpansion=ruleAddressExpansion 
	 { $current=$iv_ruleAddressExpansion.current; } 
	 EOF 
;

// Rule AddressExpansion
ruleAddressExpansion returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAddressExpansionAccess().getCommercialAtKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAddressExpansionAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddressExpansionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAddressExpansionAccess().getColonKeyword_2());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddressExpansionRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getAddressExpansionAccess().getConstructorConstructorCrossReference_3_0()); 
	}

)
)	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getAddressExpansionAccess().getLeftParenthesisKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getAddressExpansionAccess().getArgumentsArgumentParserRuleCall_5_0_0()); 
	    }
		lv_arguments_5_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddressExpansionRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_5_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAddressExpansionAccess().getCommaKeyword_5_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getAddressExpansionAccess().getArgumentsArgumentParserRuleCall_5_1_1_0()); 
	    }
		lv_arguments_7_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAddressExpansionRule());
	        }
       		add(
       			$current, 
       			"arguments",
        		lv_arguments_7_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getAddressExpansionAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleArgument
entryRuleArgument returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArgumentRule()); }
	 iv_ruleArgument=ruleArgument 
	 { $current=$iv_ruleArgument.current; } 
	 EOF 
;

// Rule Argument
ruleArgument returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_simple_0_0=RULE_ID
		{
			newLeafNode(lv_simple_0_0, grammarAccess.getArgumentAccess().getSimpleIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArgumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"simple",
        		lv_simple_0_0, 
        		"ID");
	    }

)
)
    |((
(
		lv_lhs_1_0=RULE_ID
		{
			newLeafNode(lv_lhs_1_0, grammarAccess.getArgumentAccess().getLhsIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArgumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lhs",
        		lv_lhs_1_0, 
        		"ID");
	    }

)
)	otherlv_2='+' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getArgumentAccess().getPlusSignKeyword_1_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArgumentAccess().getRhsArgumentParserRuleCall_1_2_0()); 
	    }
		lv_rhs_3_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArgumentRule());
	        }
       		set(
       			$current, 
       			"rhs",
        		lv_rhs_3_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		lv_text_4_0=RULE_STRING
		{
			newLeafNode(lv_text_4_0, grammarAccess.getArgumentAccess().getTextSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArgumentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_4_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleAddressBinding
entryRuleAddressBinding returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddressBindingRule()); }
	 iv_ruleAddressBinding=ruleAddressBinding 
	 { $current=$iv_ruleAddressBinding.current; } 
	 EOF 
;

// Rule AddressBinding
ruleAddressBinding returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAddressBindingAccess().getCommercialAtKeyword_0());
    }
((
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getAddressBindingAccess().getNameIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddressBindingRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAddressBindingAccess().getEqualsSignKeyword_1_1());
    }
)?	otherlv_3='(' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getAddressBindingAccess().getLeftParenthesisKeyword_2());
    }
(
(
		lv_addresses_4_0=RULE_HEX_NUM
		{
			newLeafNode(lv_addresses_4_0, grammarAccess.getAddressBindingAccess().getAddressesHEX_NUMTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddressBindingRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"addresses",
        		lv_addresses_4_0, 
        		"HEX_NUM");
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAddressBindingAccess().getCommaKeyword_4_0());
    }
(
(
		lv_addresses_6_0=RULE_HEX_NUM
		{
			newLeafNode(lv_addresses_6_0, grammarAccess.getAddressBindingAccess().getAddressesHEX_NUMTerminalRuleCall_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAddressBindingRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"addresses",
        		lv_addresses_6_0, 
        		"HEX_NUM");
	    }

)
))*	otherlv_7=')' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getAddressBindingAccess().getRightParenthesisKeyword_5());
    }
)
;





// Entry rule entryRuleInstantiation
entryRuleInstantiation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstantiationRule()); }
	 iv_ruleInstantiation=ruleInstantiation 
	 { $current=$iv_ruleInstantiation.current; } 
	 EOF 
;

// Rule Instantiation
ruleInstantiation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='@' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getInstantiationAccess().getCommercialAtKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstantiationAccess().getAddressAddressSpecParserRuleCall_1_0()); 
	    }
		lv_address_1_0=ruleAddressSpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstantiationRule());
	        }
       		set(
       			$current, 
       			"address",
        		lv_address_1_0, 
        		"AddressSpec");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstantiationAccess().getColonKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstantiationAccess().getKindKindParserRuleCall_3_0()); 
	    }
		lv_kind_3_0=ruleKind		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstantiationRule());
	        }
       		set(
       			$current, 
       			"kind",
        		lv_kind_3_0, 
        		"Kind");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getInstantiationAccess().getLeftParenthesisKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInstantiationAccess().getPropertiesInstantiationPropertyParserRuleCall_5_0_0()); 
	    }
		lv_properties_5_0=ruleInstantiationProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstantiationRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_5_0, 
        		"InstantiationProperty");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getInstantiationAccess().getCommaKeyword_5_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstantiationAccess().getPropertiesInstantiationPropertyParserRuleCall_5_1_1_0()); 
	    }
		lv_properties_7_0=ruleInstantiationProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstantiationRule());
	        }
       		add(
       			$current, 
       			"properties",
        		lv_properties_7_0, 
        		"InstantiationProperty");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInstantiationAccess().getRightParenthesisKeyword_6());
    }
)
;





// Entry rule entryRuleAddressSpec
entryRuleAddressSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAddressSpecRule()); }
	 iv_ruleAddressSpec=ruleAddressSpec 
	 { $current=$iv_ruleAddressSpec.current; } 
	 EOF 
;

// Rule AddressSpec
ruleAddressSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAddressSpecAccess().getDirectAddressSpecParserRuleCall_0()); 
    }
    this_DirectAddressSpec_0=ruleDirectAddressSpec
    { 
        $current = $this_DirectAddressSpec_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAddressSpecAccess().getNamedAddressSpecParserRuleCall_1()); 
    }
    this_NamedAddressSpec_1=ruleNamedAddressSpec
    { 
        $current = $this_NamedAddressSpec_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDirectAddressSpec
entryRuleDirectAddressSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDirectAddressSpecRule()); }
	 iv_ruleDirectAddressSpec=ruleDirectAddressSpec 
	 { $current=$iv_ruleDirectAddressSpec.current; } 
	 EOF 
;

// Rule DirectAddressSpec
ruleDirectAddressSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getDirectAddressSpecAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDirectAddressSpecRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDirectAddressSpecAccess().getEqualsSignKeyword_1());
    }
(
(
		lv_address_2_0=RULE_HEX_NUM
		{
			newLeafNode(lv_address_2_0, grammarAccess.getDirectAddressSpecAccess().getAddressHEX_NUMTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDirectAddressSpecRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"address",
        		lv_address_2_0, 
        		"HEX_NUM");
	    }

)
))
;





// Entry rule entryRuleNamedAddressSpec
entryRuleNamedAddressSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedAddressSpecRule()); }
	 iv_ruleNamedAddressSpec=ruleNamedAddressSpec 
	 { $current=$iv_ruleNamedAddressSpec.current; } 
	 EOF 
;

// Rule NamedAddressSpec
ruleNamedAddressSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getNamedAddressSpecAccess().getNameIDTerminalRuleCall_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedAddressSpecRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)
;





// Entry rule entryRuleKind
entryRuleKind returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getKindRule()); } 
	 iv_ruleKind=ruleKind 
	 { $current=$iv_ruleKind.current.getText(); }  
	 EOF 
;

// Rule Kind
ruleKind returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='READ' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getKindAccess().getREADKeyword_0()); 
    }

    |
	kw='WRITE' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getKindAccess().getWRITEKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleInstantiationProperty
entryRuleInstantiationProperty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getInstantiationPropertyRule()); }
	 iv_ruleInstantiationProperty=ruleInstantiationProperty 
	 { $current=$iv_ruleInstantiationProperty.current; } 
	 EOF 
;

// Rule InstantiationProperty
ruleInstantiationProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInstantiationPropertyAccess().getIDPropertyAction_0_0(),
            $current);
    }
)	otherlv_1='ID' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getInstantiationPropertyAccess().getIDKeyword_0_1());
    }
	otherlv_2='=' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getInstantiationPropertyAccess().getEqualsSignKeyword_0_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInstantiationPropertyAccess().getIdArgumentParserRuleCall_0_3_0()); 
	    }
		lv_id_3_0=ruleArgument		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInstantiationPropertyRule());
	        }
       		set(
       			$current, 
       			"id",
        		lv_id_3_0, 
        		"Argument");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInstantiationPropertyAccess().getCRCPropertyAction_1_0(),
            $current);
    }
)	otherlv_5='CRC' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getInstantiationPropertyAccess().getCRCKeyword_1_1());
    }
)
    |((
    {
        $current = forceCreateModelElement(
            grammarAccess.getInstantiationPropertyAccess().getPublishPropertyAction_2_0(),
            $current);
    }
)	otherlv_7='PUBLISH' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getInstantiationPropertyAccess().getPUBLISHKeyword_2_1());
    }
	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getInstantiationPropertyAccess().getLeftParenthesisKeyword_2_2());
    }
(
(
		lv_mode_9_0=RULE_INT
		{
			newLeafNode(lv_mode_9_0, grammarAccess.getInstantiationPropertyAccess().getModeINTTerminalRuleCall_2_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstantiationPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"mode",
        		lv_mode_9_0, 
        		"INT");
	    }

)
)	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getInstantiationPropertyAccess().getCommaKeyword_2_4());
    }
(
(
		lv_rate_11_0=RULE_INT
		{
			newLeafNode(lv_rate_11_0, grammarAccess.getInstantiationPropertyAccess().getRateINTTerminalRuleCall_2_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInstantiationPropertyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"rate",
        		lv_rate_11_0, 
        		"INT");
	    }

)
)	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getInstantiationPropertyAccess().getRightParenthesisKeyword_2_6());
    }
))
;





// Entry rule entryRuleGrouping
entryRuleGrouping returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGroupingRule()); }
	 iv_ruleGrouping=ruleGrouping 
	 { $current=$iv_ruleGrouping.current; } 
	 EOF 
;

// Rule Grouping
ruleGrouping returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getGroupingAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGroupingRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGroupingAccess().getEqualsSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupingAccess().getElementsGroupElementParserRuleCall_2_0()); 
	    }
		lv_elements_2_0=ruleGroupElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupingRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_2_0, 
        		"GroupElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getGroupingAccess().getCommaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupingAccess().getElementsGroupElementParserRuleCall_3_1_0()); 
	    }
		lv_elements_4_0=ruleGroupElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupingRule());
	        }
       		add(
       			$current, 
       			"elements",
        		lv_elements_4_0, 
        		"GroupElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleGroupElement
entryRuleGroupElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGroupElementRule()); }
	 iv_ruleGroupElement=ruleGroupElement 
	 { $current=$iv_ruleGroupElement.current; } 
	 EOF 
;

// Rule GroupElement
ruleGroupElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getGroupElementAccess().getPathPathElementParserRuleCall_0_0()); 
	    }
		lv_path_0_0=rulePathElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupElementRule());
	        }
       		add(
       			$current, 
       			"path",
        		lv_path_0_0, 
        		"PathElement");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getGroupElementAccess().getFullStopKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGroupElementAccess().getPathPathElementParserRuleCall_1_1_0()); 
	    }
		lv_path_2_0=rulePathElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGroupElementRule());
	        }
       		add(
       			$current, 
       			"path",
        		lv_path_2_0, 
        		"PathElement");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRulePathElement
entryRulePathElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPathElementRule()); }
	 iv_rulePathElement=rulePathElement 
	 { $current=$iv_rulePathElement.current; } 
	 EOF 
;

// Rule PathElement
rulePathElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_simple_0_0=RULE_ID
		{
			newLeafNode(lv_simple_0_0, grammarAccess.getPathElementAccess().getSimpleIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPathElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"simple",
        		lv_simple_0_0, 
        		"ID");
	    }

)
)
    |(	otherlv_1='ALL' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getPathElementAccess().getALLKeyword_1_0());
    }
	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPathElementAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPathElementRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getPathElementAccess().getTypeConstructorCrossReference_1_2_0()); 
	}

)
)	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getPathElementAccess().getRightParenthesisKeyword_1_3());
    }
))
;





RULE_HEX_NUM : '0' 'x' ('0'..'9'|'a'..'f'|'A'..'F')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


